---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2023/3/11 15:23
---
local poolItem = require("Data.Excel.poolItem")
local url = "Prefabs/Panel/DrawCard/SearchResultItem.prefab"
---@class UI.DrawCard.SearchResultItem
---@field New fun():UI.DrawCard.SearchResultItem
local SearchResultItem = class("UI.DrawCard.SearchResultItem")
function SearchResultItem:Ctor(parent, id)
    self.gameObject = CreatePrefab(url, parent)
    self.transform = self.gameObject.transform
    self.parent = parent
    self.EquipImage = self.transform:Find("EquipImage").gameObject
    self.HeroImage = self.transform:Find("HeroImage").gameObject
    self.fx_star_show = self.transform:Find("fx_star_show").gameObject
    self.fx_douqi_new = self.transform:Find("fx_douqi_new").gameObject
    self.fx_star_show:SetActive(false)
    self.fx_douqi_new:SetActive(false)
    self.isTween = false

    self.id = id
    self.data = poolItem.GetData(id)
    if self.data.type == DemoCfg.cardType.equip then
        self.EquipImage:SetActive(true)
        self.HeroImage:SetActive(false)
        self.image = self.EquipImage
        local info = require("Data.Excel.equip").GetData(self.data.toID)
        self.info = info
        --self.nameText.text = info.name
        GetComponent.Image(self.EquipImage).sprite = resMgr:LoadSpriteAtPath(string.format("%s%s.png", DemoCfg.equipIconPath, info.icon))
    elseif self.data.type == DemoCfg.cardType.hero then
        self.EquipImage:SetActive(false)
        self.HeroImage:SetActive(true)
        self.image = self.HeroImage
        local info = require("Data.Excel.avatar").GetData(self.data.toID)
        self.info = info
        --self.nameText.text = info.name
    end

    self.fxUrl = DemoCfg.SearchLightCfg[self.data.quality]
    self.fx_search_light = CreatePrefab(self.fxUrl, self.transform:Find("fxRoot"))
end

function SearchResultItem:PlayTween(endCall)
    self.isTween = true
    self.gameObject:SetActive(true)
    local cg = GetComponent.CanvasGroup(self.image)
    local fxCg = GetComponent.CanvasGroup(self.fx_search_light)
    cg.alpha = 0
    local seq = DOTween.Sequence()
    seq:Append(fxCg:DOFade(1, 0.3))
    if self.data.quality == DemoCfg.cardQuality.orange and self.data.type == DemoCfg.cardType.hero then
        seq:AppendCallback(function()
            self.fx_star_show:SetActive(true)
            self.fx_douqi_new:SetActive(false)
        end)
        seq:AppendInterval(1)
        seq:AppendCallback(function()
            local showFunc = function()
                self.fx_douqi_new:SetActive(true)
                cg:DOFade(1, 0.3)
                self.image.transform:DOLocalMoveY(75, 1):SetEase(DOTWEEN_EASE.Linear):SetLoops(-1, DOTWEEN_LOOP_TYPE.Yoyo)
                if endCall then
                    endCall()
                end
            end
            local classUrl = string.format("Modules.UI.DrawCard.Feature.%s_feature", self.info.pic)
            local feature = require(classUrl).New("Prefabs/Panel/DrawCard/featurePic.prefab",self.parent.parent
            ,self.info.pic,nil,showFunc)
            feature:Play()
        end)
    else
        seq:Append(cg:DOFade(1, 0.3))
        seq:AppendCallback(function()
            if endCall then
                endCall()
            end
        end)
    end
end

function SearchResultItem:Recycle()
    RecyclePrefab(self.gameObject, url)
    RecyclePrefab(self.fxUrl)
end
return SearchResultItem