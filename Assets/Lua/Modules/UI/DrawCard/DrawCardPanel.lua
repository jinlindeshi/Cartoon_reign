---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sunshuo.
--- DateTime: 2023/2/17 15:44
---  抽卡界面
local PoolSelectBtn = require("Modules.UI.DrawCard.PoolSelectBtn")
local PoolControl = require("Modules.UI.DrawCard.PoolControl")
local CardControl = require("Modules.UI.DrawCard.CardControl")
local DrawCardModel = require("Modules.UI.DrawCard.Model.DrawCardModel")
---@class UI.DrawCard.DrawCardPanel:UI.BasePanel
---@field New fun():UI.DrawCard.DrawCardPanel
local DrawCardPanel = class("UI.DrawCard.DrawCardPanel", BasePanel)

function DrawCardPanel:Init()
    DrawCardPanel.super.Init(self)
    self.PoolRoot = self.transform:Find("PoolRoot")
    self.SelectPoolRoot = self.transform:Find("SelectPoolRoot")
    self.SelectRoot = self.transform:Find("SelectPoolRoot/Scroll View/Viewport/Content")
    self.ResultRoot = self.transform:Find("ResultRoot").gameObject
    self.light = self.transform:Find("ResultRoot/light").gameObject
    self.OnceRoot = self.transform:Find("ResultRoot/OnceRoot").gameObject
    self.cardPos = self.transform:Find("ResultRoot/OnceRoot/cardPos")
    self.TenRoot = self.transform:Find("ResultRoot/TenRoot").gameObject
    self.PosRoot = self.transform:Find("ResultRoot/TenRoot/PosRoot")
    self.ButtonRoot = self.transform:Find("ResultRoot/ButtonRoot")
    self.AutoButton = self.transform:Find("ResultRoot/ButtonRoot/AutoButton").gameObject
    self.YesButton = self.transform:Find("ResultRoot/ButtonRoot/YesButton").gameObject
    self.AgainButton = self.transform:Find("ResultRoot/ButtonRoot/AgainButton").gameObject

    AddButtonHandler(self.AutoButton, PointerHandler.CLICK, self.OnAutoButton, self)
    AddButtonHandler(self.YesButton, PointerHandler.CLICK, self.OnYesButton, self)
    AddButtonHandler(self.AgainButton, PointerHandler.CLICK, self.OnAgainButton, self)
    self.ResultRoot:SetActive(false)
    self.poolIdList = SData.GetOpenPools()
    self.poolMap = {}
    self:InitSelectPool()
    self.cardList = {}
    EventMgr.AddEventListener(DrawCardModel.eventDefine.selectPool, self.OnDrawCardPoolSelect, self)
    EventMgr.AddEventListener(DrawCardModel.eventDefine.oneDraw, self.OnDrawCard, self)
    EventMgr.AddEventListener(DrawCardModel.eventDefine.tenDraw, self.OnDrawCard, self)
    EventMgr.AddEventListener(DrawCardModel.eventDefine.checkOpen, self.OnCheckOpen, self)

    EventMgr.DispatchEvent(DrawCardModel.eventDefine.selectPool, {id = self.poolIdList[1]})
end

---卡池选择scrollView配置
local selectPosCfg =
{
    startGap = 10,
    startY = 0,
    gapX = 10
}

function DrawCardPanel:InitSelectPool()
    self.btnList = {}
    local count = #self.poolIdList
    local contentWidth = 0
    for i = 1, count do
        local id = self.poolIdList[i]
        local btn = PoolSelectBtn.New(self.SelectRoot, id)
        local rect = GetComponent.RectTransform(btn.gameObject)
        local btnWidth = rect.rect.width
        local pos = Vector2.New(btnWidth/2 + selectPosCfg.startGap + (i - 1) * (btnWidth + selectPosCfg.gapX), selectPosCfg.startY )
        contentWidth = contentWidth + btnWidth
        rect.anchoredPosition = pos
        table.insert(self.btnList, btn)
    end
    contentWidth = contentWidth + selectPosCfg.startGap * 2 + selectPosCfg.gapX * (count - 1)
    GetComponent.RectTransform(self.SelectRoot.gameObject).sizeDelta = Vector2.New(contentWidth, 0)
end

function DrawCardPanel:SelectPool(poolId)
    if self.selectPoolId == poolId then
        return
    end
    self.selectPoolId = poolId
    if self.poolMap[poolId] == nil then
        self.poolMap[poolId] = PoolControl.New(self.PoolRoot, poolId)
    end
    for id, view in pairs(self.poolMap) do
        if id == poolId then
            view:Show()
        else
            view:Hide()
        end
    end
end

function DrawCardPanel:OnDrawCardPoolSelect(event)
    self:SelectPool(event.data.id)
end

---开始抽卡
function DrawCardPanel:StartDraw(callback)
    local cg1 = GetComponent.CanvasGroup(self.SelectPoolRoot.gameObject)
    local cg2 = GetComponent.CanvasGroup(self.PoolRoot.gameObject)
    local resultCg = GetComponent.CanvasGroup(self.ResultRoot)
    local lightCg = GetComponent.CanvasGroup(self.light)
    local btnCg = GetComponent.CanvasGroup(self.ButtonRoot)
    resultCg.alpha = 0
    lightCg.alpha = 0
    btnCg.alpha = 0
    self.light.transform.localScale = Vector2.one
    self.ResultRoot:SetActive(true)
    self.AutoButton:SetActive(true)
    self.YesButton:SetActive(false)
    self.AgainButton:SetActive(false)

    local seq = DOTween.Sequence()
    seq:Append(cg1:DOFade(0, 0.25))
    seq:Join(cg2:DOFade(0, 0.25))
    seq:Join(resultCg:DOFade(1, 0.25))
    seq:Append(self.light.transform:DOScale(2,0.8))
    seq:Join(lightCg:DOFade(1, 0.2))
    seq:Append(lightCg:DOFade(0, 0.2))
    seq:Join(self.light.transform:DOScale(1,0.2))
    seq:AppendCallback(callback)
    seq:Append(btnCg:DOFade(1, 0.2))
end

---抽卡完成
function DrawCardPanel:DrawComplete()
    self.AutoButton:SetActive(false)
    self.YesButton:SetActive(true)
    self.AgainButton:SetActive(true)
end


---抽卡结束
function DrawCardPanel:DrawEnd()
    local cg1 = GetComponent.CanvasGroup(self.SelectPoolRoot.gameObject)
    local cg2 = GetComponent.CanvasGroup(self.PoolRoot.gameObject)
    local resultCg = GetComponent.CanvasGroup(self.ResultRoot)

    local seq = DOTween.Sequence()
    seq:Append(cg1:DOFade(1, 0.25))
    seq:Join(cg2:DOFade(1, 0.25))
    seq:Join(resultCg:DOFade(0, 0.25))
    seq:AppendCallback(function()
        self.ResultRoot:SetActive(false)
        self:CleanCard()
    end)
end

---抽一次
function DrawCardPanel:DrawOnce()
    self.OnceRoot:SetActive(true)
    self.TenRoot:SetActive(false)

    local card = CardControl.New(self.cardPos, DrawCardModel.GetOneDrawData())
    table.insert(self.cardList, card)
end

---抽十次
function DrawCardPanel:DrawTenTimes()
    self.OnceRoot:SetActive(false)
    self.TenRoot:SetActive(true)

    local data = DrawCardModel.GetTenDrawData()
    for i = 1, self.PosRoot.childCount do
        local item = self.PosRoot:GetChild(i-1)
        local card = CardControl.New(item, data[i])
        table.insert(self.cardList, card)
    end
end

---清理结果
function DrawCardPanel:CleanCard()
    for i = 1, #self.cardList do
        self.cardList[i]:Destroy()
        self.cardList[i] = nil
    end
end

---抽卡事件
function DrawCardPanel:OnDrawCard(event)
    self.drawType = event.type
    self:StartDraw(function()
        if self.drawType == DrawCardModel.eventDefine.oneDraw then
            self:DrawOnce()
        else
            self:DrawTenTimes()
        end
    end)
end

function DrawCardPanel:OnCheckOpen()
    local flag = true
    for i = 1, #self.cardList do
        if self.cardList[i].isOpen == false then
            flag = false
            break
        end
    end
    if flag then
        self:DrawComplete()
    end
end

---一键翻开
function DrawCardPanel:OnAutoButton()
    GetComponent.CanvasGroup(self.ButtonRoot).alpha = 0
    self:DrawComplete()
    local list = {}
    for i = 1, #self.cardList do
        local item = self.cardList[i]
        if item.isOpen == false then
            table.insert(list, item)
        end
    end
    local seq = DOTween.Sequence()
    for i = 1, #list do
        if i ~= #list then
            seq:AppendCallback(function()
                list[i]:Open()
            end)
            seq:AppendInterval(0.15)
        else
            seq:AppendCallback(function()
                list[i]:Open(function()
                    GetComponent.CanvasGroup(self.ButtonRoot):DOFade(1, 0.15)
                end)
            end)
        end
    end
end

---确定
function DrawCardPanel:OnYesButton()
    self:DrawEnd()
end

---再来一次
function DrawCardPanel:OnAgainButton()
    self:CleanCard()
    self:StartDraw(function()
        if self.drawType == DrawCardModel.eventDefine.oneDraw then
            self:DrawOnce()
        else
            self:DrawTenTimes()
        end
    end)
end

function DrawCardPanel:RemoveListeners()
    DrawCardPanel.super.RemoveListeners(self)
    EventMgr.RemoveEventListener(DrawCardModel.eventDefine.selectPool, self.OnDrawCardPoolSelect, self)
    EventMgr.RemoveEventListener(DrawCardModel.eventDefine.oneDraw, self.OnDrawCard, self)
    EventMgr.RemoveEventListener(DrawCardModel.eventDefine.tenDraw, self.OnDrawCard, self)
    EventMgr.RemoveEventListener(DrawCardModel.eventDefine.checkOpen, self.OnCheckOpen, self)
    RemoveButtonHandler(self.AutoButton, PointerHandler.CLICK, self.OnAutoButton, self)
    RemoveButtonHandler(self.YesButton, PointerHandler.CLICK, self.OnYesButton, self)
    RemoveButtonHandler(self.AgainButton, PointerHandler.CLICK, self.OnAgainButton, self)
end

return DrawCardPanel