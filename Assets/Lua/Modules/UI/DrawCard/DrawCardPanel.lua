---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by admin.
--- DateTime: 2023/2/17 15:44
---
local PoolSelectBtn = require("Modules.UI.DrawCard.PoolSelectBtn")
local PoolControl = require("Modules.UI.DrawCard.PoolControl")

---@class UI.DrawCard.DrawCardPanel:UI.BasePanel
---@field New fun():UI.DrawCard.DrawCardPanel
local DrawCardPanel = class("UI.DrawCard.DrawCardPanel", BasePanel)

function DrawCardPanel:Init()
    DrawCardPanel.super.Init(self)
    self.PoolRoot = self.transform:Find("PoolRoot")
    self.SelectPoolRoot = self.transform:Find("SelectPoolRoot")
    self.SelectRoot = self.transform:Find("SelectPoolRoot/Scroll View/Viewport/Content")
    self.poolIdList = SData.GetOpenPools()
    self.poolMap = {}
    self:InitSelectPool()
    EventMgr.AddEventListener("DrawCardPoolSelect", self.OnDrawCardPoolSelect, self)
    EventMgr.DispatchEvent("DrawCardPoolSelect", {id = self.poolIdList[1]})
end

---卡池选择scrollView配置
local selectPosCfg =
{
    startGap = 10,
    startY = 0,
    gapX = 10
}

function DrawCardPanel:InitSelectPool()
    self.btnList = {}
    local count = #self.poolIdList
    local contentWidth = 0
    for i = 1, count do
        local id = self.poolIdList[i]
        local btn = PoolSelectBtn.New(self.SelectRoot, id)
        local rect = GetComponent.RectTransform(btn.gameObject)
        local btnWidth = rect.rect.width
        local pos = Vector2.New(btnWidth/2 + selectPosCfg.startGap + (i - 1) * (btnWidth + selectPosCfg.gapX), selectPosCfg.startY )
        contentWidth = contentWidth + btnWidth
        rect.anchoredPosition = pos
        table.insert(self.btnList, btn)
    end
    contentWidth = contentWidth + selectPosCfg.startGap * 2 + selectPosCfg.gapX * (count - 1)
    GetComponent.RectTransform(self.SelectRoot.gameObject).sizeDelta = Vector2.New(contentWidth, 0)
end

function DrawCardPanel:SelectPool(poolId)
    if self.selectPoolId == poolId then
        return
    end
    self.selectPoolId = poolId
    if self.poolMap[poolId] == nil then
        self.poolMap[poolId] = PoolControl.New(self.PoolRoot, poolId)
    end
    for id, view in pairs(self.poolMap) do
        if id == poolId then
            view:Show()
        else
            view:Hide()
        end
    end
end

function DrawCardPanel:OnDrawCardPoolSelect(event)
    self:SelectPool(event.data.id)
end

function DrawCardPanel:RemoveListeners()
    DrawCardPanel.super.RemoveListeners(self)
    EventMgr.RemoveEventListener("DrawCardPoolSelect", self.OnDrawCardPoolSelect, self)
end
return DrawCardPanel