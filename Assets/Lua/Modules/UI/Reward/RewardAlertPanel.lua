---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sunshuo.
--- DateTime: 2023/2/8 13:40
--- 奖励展示界面
local CommonItem = require("Modules.UI.Common.CommonItem")
local SData = require("Modules.WarScene.Model.SData")
---@class UI.RewardAlertPanel:UI.BasePanel
---@field New fun():UI.RewardAlertPanel
local RewardAlertPanel = class("UI.RewardAlertPanel", BasePanel)

function RewardAlertPanel:Init(dataList)
    RewardAlertPanel.super.Init(self)
    self.listRoot = self.transform:Find("Root/InfoBG/listRoot")
    self.YesButton = self.transform:Find("Root/buttonRoot/YesButton").gameObject
    self.yesCg = GetComponent.CanvasGroup(self.YesButton)
    self.closeCg = GetComponent.CanvasGroup(self.BtnClose)

    self.dataList = dataList
    self.itemList = {} ---@type table<number, LuaObj>
    self:InitItemList(true)
    self.yesCg.alpha = 0
    self.closeCg.alpha = 0
end

function RewardAlertPanel:OnInit()
    RewardAlertPanel.super.OnInit(self)
    AddButtonHandler(self.YesButton, PointerHandler.CLICK, self.OnYesButtonClick, self)
    self:ShowItemList(function()
        self.yesCg:DOFade(1, 0.2)
        self.closeCg:DOFade(1, 0.2)
    end)
end

function RewardAlertPanel:InitItemList(initHide)
    for i = 1, #self.dataList do
        local data = self.dataList[i]
        local itemData = clone(data)
        itemData.sData = SData.equip.GetData(itemData.id)
        local item = CommonItem.New(self.listRoot, itemData)
        table.insert(self.itemList, item)
        if initHide then
            item:Hide()
        end
    end
end

function RewardAlertPanel:ShowItemList(callBack)
    local count = #self.itemList
    local seq = DOTween.Sequence()
    for i = 1, count do
        local item = self.itemList[i]
        seq:AppendCallback(function()
            item:Show()
            item.transform.localScale = Vector3.New(0.8,0.8,0.8)
        end)
        seq:Append(item.transform:DOScale(1, 0.15 * ((count - i)/count)))
    end
    if callBack then
        seq:AppendCallback(callBack)
    end

end

function RewardAlertPanel:OnYesButtonClick()
    local mainMenuPanel = UIMgr.GetPanel(UIPanelCfg.mainMenu) ---@type UI.MainMenuPanel
    mainMenuPanel:ActiveBtnLight("reward", false)
    local fakeList = GameObject.Instantiate(self.listRoot.gameObject, UIMgr.GetLayer(UILayerName.alert)) ---@type UnityEngine.GameObject
    fakeList.transform.position = self.listRoot.position
    local endPos = mainMenuPanel.infoButton.transform.position
    local childCount = fakeList.transform.childCount
    local seq = DOTween.Sequence()
    seq:Append(GetComponent.CanvasGroup(self.gameObject):DOFade(0, 0.2))
    for i = 1, childCount do
        local item = fakeList.transform:GetChild(i-1)
        if i == childCount then
            ---最后一次
            seq:AppendCallback(function()
                local itemSeq = DOTween.Sequence()
                itemSeq:Append(item:DOMove(endPos, 0.35):SetEase(DOTWEEN_EASE.InCubic))
                itemSeq:Join(item:DOScale(0, 0.35):SetEase(DOTWEEN_EASE.InCubic))
                itemSeq:AppendCallback(function()
                    local fx = CreatePrefab("Effect/Prefabs/fx_light_show_short.prefab", mainMenuPanel.infoButton.transform)
                    fx:Destroy(1)
                    self:Close()
                    fakeList:Destroy()
                end)
                itemSeq:AppendInterval(0.5)
                itemSeq:AppendCallback(function()
                    mainMenuPanel:ActiveBtnLight("info", true)
                end)
            end)
        else
            seq:AppendCallback(function()
                local itemSeq = DOTween.Sequence()
                itemSeq:Append(item:DOMove(endPos, 0.35):SetEase(DOTWEEN_EASE.InCubic))
                itemSeq:Join(item:DOScale(0.3, 0.35):SetEase(DOTWEEN_EASE.InCubic))
                itemSeq:AppendCallback(function()
                    local fx = CreatePrefab("Effect/Prefabs/fx_light_show_short.prefab", mainMenuPanel.infoButton.transform)
                    fx:Destroy(1)
                end)
            end)
            seq:AppendInterval(0.2 *  ((childCount - i)/childCount))
        end
    end
end

function RewardAlertPanel:RemoveListeners()
    RewardAlertPanel.super.RemoveListeners(self)
    RemoveButtonHandler(self.YesButton, PointerHandler.CLICK, self.OnYesButtonClick, self)
end

return RewardAlertPanel