---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2019-07-19 11:19
--- 测试Avatar

local LuaObj = require("Prayer.Core.LuaObj")
---@class Avatar:LuaObj
---@field transform UnityEngine.Transform
---@field gameObject UnityEngine.GameObject
local Avatar = class("Avatar", LuaObj)

Avatar.ANI_MOVE_NAME="move"
Avatar.ANI_IDLE_NAME="idle"
Avatar.ANI_ATTACK_NAME="attack"
Avatar.ANI_DEAD_NAME="dead"
function Avatar:Ctor(prefabPath, noController, parent)
    prefabPath = prefabPath or "Models/TestZombie.prefab"
    Avatar.super.Ctor(self, prefabPath, nil, parent)

    self.speed = 0
    self.direction = self.transform.localEulerAngles.y

    self.ani = self.gameObject:GetComponentInChildren(typeof(UnityEngine.Animator)) ---@type UnityEngine.Animator
    if not self.ani then
        return
    end
    self:PlayAnimation(Avatar.ANI_IDLE_NAME)
    if noController ~= true then
        self.cc = AddOrGetComponent(self.gameObject, UnityEngine.CharacterController) ---@type UnityEngine.CharacterController
    end
    self:InitAnimations()
end

---初始化动画时长们
function Avatar:InitAnimations()
    local clips = self.ani.runtimeAnimatorController.animationClips
    self.clipLens = {}
    for i = 0, clips.Length - 1 do
        local clip = clips[i] ---@type UnityEngine.AnimationClip
        self.clipLens[clip.name] = clip.length
        --print("Avatar:InitAnimations", clip.name)
    end
end

function Avatar:SetDirection(value)
    --self.direction = self.direction + value
    self.direction = value
    self.transform.localEulerAngles = Vector3.New(0, self.direction, 0)
end

function Avatar:PlayAnimation(name, crossTime, callBack)
    if not self.lastAni or self.lastAni == Avatar.ANI_IDLE_NAME then
        self.ani:Play(name)
    else
        crossTime = crossTime or 0
        self.ani:CrossFade(name, crossTime)
    end
    self.lastAni = name
    if callBack then
        --print("Avatar:PlayAnimation2", name, self.clipLens[name])
        DelayedCall(self.clipLens[name], callBack)
    end
end

function Avatar:Recycle()
    Avatar.super.Recycle(self)

end

function Avatar:OnDestroy()
    --print("Avatar:OnDestroy")
end

return Avatar