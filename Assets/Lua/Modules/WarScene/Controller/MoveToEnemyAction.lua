---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2021/12/2 15:46
--- 找到敌方附近位置，并移动过去
---
local BaseAction = require("Prayer.Core.BaseAction")
local WarData = require("Modules.WarScene.Model.WarData")
---@class MoveToEnemyAction:BaseAction
local MoveToEnemyAction = class("MoveToEnemyAction", BaseAction)

function MoveToEnemyAction:Ctor(avatar, bToLua, cAction, paramFloat, paramBool)
    MoveToEnemyAction.super.Ctor(self, bToLua, cAction, paramFloat, paramBool)
    self.avatar = avatar ---@type WarAvatar
end

function MoveToEnemyAction:OnStart()
    --print("MoveToEnemyAction OnStart")
    if not self.avatar.target then
        return
    end

    if self.avatar.target:CheckDead() == true then ---目标已经死了，不用过去了
        print("目标已经死了，不用过去了")
        self.cAction:SetUpdateStatus(TaskStatus.Failure)
        return
    end

    ---如果目标还在攻击范围内 用距离判断(只能判断两格以内近战)
    --local dis = Vector3.Distance(self.avatar.transform.position, self.avatar.target.transform.position)
    --local atkRadius = math.cos(math.rad(45)) * WarData.gridGraph.nodeSize * 2 --检测距离
    --if dis <= atkRadius then
    --    --print("目标还在攻击范围内")
    --    self.cAction:SetUpdateStatus(TaskStatus.Success)
    --    return
    --end

    self.avatar:EndFollow()
    self.avatar:StopMoving()

    local grids = WarData.GetAroundGrids(self.avatar.x, self.avatar.z, self.avatar.attackRadius)
    if grids[self.avatar.target.x] and grids[self.avatar.target.x][self.avatar.target.z] then
        --if self.avatar.data.id == -2 then
        --    print("敌人能打到，不用走")
        --end
        self.cAction:SetUpdateStatus(TaskStatus.Success)
        return
    end


    self:MoveToEnemy()
end

function MoveToEnemyAction:MoveToEnemy()
    self.cAction:SetUpdateStatus(TaskStatus.Running)

    local x,z,nearestPos,grids = WarData.GetAroundNearestGrid(self.avatar.transform.position, self.avatar.target.x, self.avatar.target.z,
            self.avatar.attackRadius, true, WarData.AvatarGrids)
    local nearestLoc = {x, z}

    if x==nil or z==nil then
        local str = ""
        for x, tb in pairs(grids) do
            for z, v in pairs(tb) do
                str = str.." "..x..","..z
            end
        end
        print("找不到敌人周围能去的格子啦", self.avatar.data.id,self.avatar.target.data.id,#grids,str)
        self.avatar.target = nil
        self.cAction:SetUpdateStatus(TaskStatus.Failure)
        return
    end
    self.avatar:MoveAStar(nearestPos, function()
        self.cAction:SetUpdateStatus(TaskStatus.Success)
    end, nearestLoc)
end

function MoveToEnemyAction:OnPause(paused)
    --print("MoveToEnemyAction:OnPause", paused)
    self.paused = paused
end

function MoveToEnemyAction:OnBehaviorComplete()
    if self.cAction:GetUpdateStatus() == TaskStatus.Running then
        local nowGrid = WarData.gridGraph:GetNearest(self.avatar.transform.position, Pathfinding.NNConstraint.None).node
        self.avatar:SetLoc(nowGrid.XCoordinateInGrid, nowGrid.ZCoordinateInGrid)
        self.avatar:StopMoving()
        self.avatar:EndFollow()
    end
end

return MoveToEnemyAction