---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2021/12/2 15:31
--- 找到攻击目标

local WarData = require("Modules.WarScene.Model.WarData")
local BaseAction = require("Prayer.Core.BaseAction")
---@class FindEnemyAction:BaseAction
local FindEnemyAction = class("FindEnemyAction", BaseAction)

function FindEnemyAction:Ctor(avatar, bToLua, cAction, paramFloat, paramBool)
    FindEnemyAction.super.Ctor(self, bToLua, cAction, paramFloat, paramBool)
    --print("FindEnemyAction:Ctor", paramFloat, paramBool)
    self.avatar = avatar ---@type WarAvatar
    self.viewRadius = paramFloat or 0 ---视野半径
    --self.viewRadius = 6 ---视野半径
end

function FindEnemyAction:OnStart()
    --print("FindEnemyAction:OnStart", self.avatar.gameObject.name, self.static)
    self.cAction:SetUpdateStatus(TaskStatus.Running)
    if self.avatar.target and self.avatar.target:CheckDead() ~= true then
        self.cAction:SetUpdateStatus(TaskStatus.Success)
        return
    end
    self:TryToFind()
end

function FindEnemyAction:TryToFind()
    local grids = {}
    local myX,myZ
    if self.avatar.moving == true then
        local nowGrid = WarData.gridGraph:GetNearest(self.avatar.transform.position, Pathfinding.NNConstraint.None).node
        myX = nowGrid.XCoordinateInGrid
        myZ = nowGrid.ZCoordinateInGrid
    else
        myX = self.avatar.x
        myZ = self.avatar.z
    end

    if self.avatar.static == true then ---不能移动的对象直接找自己攻击范围内的
        grids = WarData.GetAroundGrids(myX, myZ, self.avatar.attackRadius)
    else ---移动对象找视野范围内的
        grids = WarData.GetAroundGrids(myX, myZ, self.viewRadius, nil, nil, nil, true)
    end

    ---从Avatar列表里找出一个非我方的对象 设为敌方目标
    local mySide = self.avatar.data.side
    local target
    local data
    local x
    local z
    local distance
    for id, avatar in pairs(WarData.AvatarHash) do
        data = avatar.data
        ---找到一个没死的敌方
        if mySide ~= data.side and avatar:CheckDead() ~= true then
            if avatar.moving == true then
                local info = WarData.gridGraph:GetNearest(avatar.transform.position, Pathfinding.NNConstraint.None)
                local gridNode = info.node ---@type Pathfinding.GridNode

                x = gridNode.XCoordinateInGrid
                z = gridNode.ZCoordinateInGrid
            else
                x = avatar.x
                z = avatar.z
            end
            if grids[x] and grids[x][z] then
                target = avatar
                break
            end
        end
    end

    if target then
        self.avatar:SetTarget(target)
        self.cAction:SetUpdateStatus(TaskStatus.Success)
    else

        self.cAction:SetUpdateStatus(TaskStatus.Failure)
    end
end

function FindEnemyAction:OnPause(paused)
    --print("FindEnemyAction:OnPause", paused)
    self.paused = paused
    if self.paused then
        self.avatar:SetTarget(nil)
    end
end

return FindEnemyAction