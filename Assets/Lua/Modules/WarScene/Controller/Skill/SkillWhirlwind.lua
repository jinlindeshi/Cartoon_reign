---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2023/2/8 14:46
--- 技能旋风斩

local AvatarBase = require("Modules.WarScene.View.AvatarBase.AvatarBase")
local DamageManager = require("Modules.WarScene.Manager.DamageManager")
local WarData = require("Modules.WarScene.Model.WarData")
local SkillBase = require("Modules.WarScene.Controller.Skill.SkillBase")
---@class SkillWhirlwind:SkillBase
local SkillWhirlwind = class("SkillWhirlwind", SkillBase)

local HURT_GAP_TIME = 0.2
local SKILL_TOTAL_TIME = 2
function SkillWhirlwind:Begin(avatar, callBack)
    SkillWhirlwind.super.Begin(self, avatar, callBack)

    self.avatar:PlaySkillName()
    self.avatar:PlayAnimation(AvatarBase.ANI_SKILL_NAME)

    local effPath = "Effect/Prefabs/fx_xuznahuanjian.prefab"
    local eff = CreatePrefab(effPath, self.avatar.transform)
    eff.transform.localScale = Vector3.one
    eff.transform.localPosition = Vector3.zero
    self.recycleEff = function()
        RecyclePrefab(eff, effPath)
    end
    local grids = WarData.GetAroundGrids(self.avatar.x, self.avatar.z, nil, true)
    local checkAndHurt
    checkAndHurt = function()
        local enemy ---@type WarAvatar
        local allDead = true ---周围目标是否全部死亡
        for x, tb in pairs(grids) do
            for z, v in pairs(tb) do
                enemy = WarData.GetAvatarByLoc(x,z)
                if enemy and enemy.data.side ~= self.avatar.data.side and enemy.moving ~= true and not enemy:CheckDead() then
                    --print("你妹啊~")
                    enemy:GetHurt(DamageManager.GetHurtValue(self.avatar.data, enemy.data)/2)
                    Happy.Shake(enemy.gameObject, 0.2, nil, 0.02)
                    allDead = false
                end
            end
        end
        self.dur = self.dur + HURT_GAP_TIME
        if allDead or self.dur >= SKILL_TOTAL_TIME then
            self:Over()
        end
    end
    self.dur = 0 --技能持续的时间
    Happy.RegisterLoopFun(self, checkAndHurt, HURT_GAP_TIME)
end

function SkillWhirlwind:Over()
    Happy.UnRegisterLoopFun(self)
    if self.recycleEff then
        self.recycleEff()
    end
    self.avatar:PlayAnimation(AvatarBase.ANI_IDLE_NAME)
    SkillWhirlwind.super.Over(self)
end

return SkillWhirlwind