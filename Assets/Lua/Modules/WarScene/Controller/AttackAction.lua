---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by likai.
--- DateTime: 2021/12/2 15:31
--- 攻击

local BaseAction = require("Prayer.Core.BaseAction")
local WarData = require("Modules.WarScene.Model.WarData")
---@class AttackAction:BaseAction
local AttackAction = class("AttackAction", BaseAction)

function AttackAction:Ctor(avatar, bToLua, cAction, paramFloat, paramBool)
    AttackAction.super.Ctor(self, bToLua, cAction, paramFloat, paramBool)
    self.AttackAction = "hehe"
    self.avatar = avatar ---@type WarAvatar

end

function AttackAction:OnStart()
    self.cAction:SetUpdateStatus(TaskStatus.Running)
    self.avatar:MoveEnd(true)
    self:Attack()
end

function AttackAction:Attack()
    if self.avatar:CheckDead() == true then
        --if self.avatar.data.id == -2 then
        --    print("我死了不打了")
        --end
        return
    end

    if not self.avatar.target or self.avatar.target:CheckDead() == true then
        self.avatar.target = nil
        self.cAction:SetUpdateStatus(TaskStatus.Success)

        --if self.avatar.data.id == -2 then
        --    print("目标死啦~")
        --end
        --local list = self.bToLua:GetActiveTasks()
        --print("AttackAction:AttackToDeath 已击杀目标~~", list.Length)
        return
    end

    if self.avatar.target.moving == true then ---目标移动中先不打，等一会儿再来看看
        --if self:CheckMoveNear(self.avatar.target) ~= true then
            self.avatar:LookAtTarget()
            self.cAction:SetUpdateStatus(TaskStatus.Success)
            --if self.avatar.data.id == -2 then
            --    print("目标移动中先不打，等一会儿再来看看")
            --end
            return
        --end
    end
    self.avatar:Attack(function()
        self.cAction:SetUpdateStatus(TaskStatus.Success)
    end)
end

---@param avatar WarAvatar
function AttackAction:CheckMoveNear(avatar)
    local node = WarData.gridGraph:GetNode(avatar.x, avatar.z)
    return Vector3.Distance(SeekerToLua.IntToVector(node.position), avatar.transform.position) < WarData.gridGraph.nodeSize * 2
end

function AttackAction:OnBehaviorComplete()
    if self.cAction:GetUpdateStatus() == TaskStatus.Running then
        self.avatar:CancelAttack()
    end
end

return AttackAction